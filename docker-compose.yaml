services:
  roshambo:
    container_name: roshambo
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGETOS: ${TARGETOS:-linux}
        TARGETARCH: ${TARGETARCH:-amd64}
    pull_policy: build
    ports:
      - "8080:8080"
    environment: {}
    restart: unless-stopped
    networks:
      - roshambo_network
  # telemetry services
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command:
      - --config=/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # otlp grpc receiver
      - "8889:8889" # Prometheus exporter port
    restart: unless-stopped
    depends_on:
      - prometheus
      - jaeger
    networks:
      - roshambo_network
  prometheus:
    image: prom/prometheus
    # volumes:
    #   - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - roshambo_network
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp" # UDP
      - "16686:16686" # UI
      - "14268:14268" # HTTP
      - "14250:14250" # gRPC
    restart: unless-stopped
    networks:
      - roshambo_network
networks:
  roshambo_network:
    driver: bridge
    name: roshambo_network
